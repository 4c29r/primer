(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{216:function(s,t,e){"use strict";e.r(t);var a=e(0),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"create-a-poll-post"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-a-poll-post"}},[s._v("#")]),s._v(" Create a poll post")]),s._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("Rewards")]),s._v(" "),e("p",[s._v("Upon completing this challenge, you will be rewarded "),e("strong",[s._v("50 Desmos Tokens")]),s._v(".")]),s._v(" "),e("p",[s._v("Please note that in order to prevent spam, you will receive the reward just "),e("strong",[s._v("for the first multimedia post")]),s._v(" you create. No tokens will be awarded for later posts.")])]),s._v(" "),e("p",[s._v("With version "),e("code",[s._v("v0.3.0")]),s._v(" along with poll, we've also implemented the possibility of creating posts containing multimedia files. Such files can be images, GIFs or even other file types.")]),s._v(" "),e("h2",{attrs:{id:"creating-your-first-multimedia-post"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#creating-your-first-multimedia-post"}},[s._v("#")]),s._v(" Creating your first multimedia post")]),s._v(" "),e("p",[s._v("Creating a multimedia post is very similar to "),e("router-link",{attrs:{to:"/phase-1/create-post.html"}},[s._v("creating a plain text post")]),s._v(". The only difference is that you need to perform an additional step: uploading the multimedia file you want to attach to the post to IPFS.")],1),s._v(" "),e("p",[s._v("To do so, you can use our "),e("a",{attrs:{href:""}},[s._v("IPFS Web UI")]),s._v(". Uploading a multimedia file with it it's pretty straightforward:")]),s._v(" "),e("ol",[e("li",[s._v("...")]),s._v(" "),e("li",[s._v("...")]),s._v(" "),e("li",[s._v("...")])]),s._v(" "),e("p",[s._v("Once you have obtained the IPFS hash of the file, to create a multimedia post you can use the following command")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("desmoscli tx posts create "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<Subspace>"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<Message>"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --media '"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("URI,MimeType"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v('" '),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --from "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("your-key-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" --yes \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("Each media should be specified independently using the "),e("code",[s._v("--media")]),s._v(" flag, which must be a string composed of two parts:")]),s._v(" "),e("ol",[e("li",[s._v("The first, being the URI that identifies the multimedia file. In our case it will be the IPFS link.")]),s._v(" "),e("li",[s._v("The second being the MimeType of the multimedia file.")])]),s._v(" "),e("p",[s._v("An example of such command is:")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("desmoscli tx posts create "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"4e188d9c17150037d5199bbdb91ae1eb2a78a15aca04cb35530cccb81494b36e"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"I am Batman!"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --media "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://ipfs.desmos.network/ipfs/QmPWWWaqkXQ5ub96r6Hz7dsYUZXuaEnwe14cEsyGfwfsCD,image/jpeg"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --from jack --yes\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("Once you've run that command you will be asked to type the password you've chosen during the setup and after having inserted it properly you should see something like this:")]),s._v(" "),e("div",{staticClass:"language-yml line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-yml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("height")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("txhash")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" C5375D02CDA05AFC3B8381CCFBF02E34C3448CA0C9264B17EC0E123E403BBE3B\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("codespace")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("code")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("data")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("rawlog")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[]'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("logs")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("info")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("gaswanted")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("gasused")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("tx")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token null important"}},[s._v("null")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("timestamp")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[s._v("To make sure the transaction has been processed successfully, you can query it using the following command:")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("desmoscli query tx "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("hash"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" --output json\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Example")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# desmoscli query tx C5375D02CDA05AFC3B8381CCFBF02E34C3448CA0C9264B17EC0E123E403BBE3B --output json")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("This will return you the JSON representation of the transaction itself.")]),s._v(" "),e("h2",{attrs:{id:"getting-the-reward"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getting-the-reward"}},[s._v("#")]),s._v(" Getting the reward")]),s._v(" "),e("p",[s._v("After you've created a multimedia post, to make sure you receive your reward please following this procedure:")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("Create a fork of this repo inside your private GitHub profile."),e("br"),s._v("\nIf you do not know how to do it, follow the "),e("a",{attrs:{href:"https://help.github.com/en/github/getting-started-with-github/fork-a-repo",target:"_blank",rel:"noopener noreferrer"}},[s._v("GitHub fork guide"),e("OutboundLink")],1),s._v(".")])]),s._v(" "),e("li",[e("p",[s._v("Pull the fork locally:")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://github.com/"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("your-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/primer.git ~/desmos-primer\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" ~/desmos-primer\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("Make sure your fork is up to date with the Primer repository:")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" upstream https://github.com/desmos-labs/primer.git\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" fetch upstream\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rebase upstream/master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("Create a file named after your GitHub username containing the post creation transaction hash:")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<tx-hash>"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" ./phases/phase-3/challenges/multimedia/"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("your-github-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Example")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# echo "C5375D02CDA05AFC3B8381CCFBF02E34C3448CA0C9264B17EC0E123E403BBE3B" >> ./phases/phase-3/challenges/multimedia/RiccardoM')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("Commit the changes, push them to your forked repo and create a pull request. If you do not know how to create one, refer to the "),e("a",{attrs:{href:"https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/creating-a-pull-request",target:"_blank",rel:"noopener noreferrer"}},[s._v("GitHub Pull Requests guide"),e("OutboundLink")],1),s._v(".")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);